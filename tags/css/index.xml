<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CSS on ImageDiagnosis &amp; Program</title>
    <link>https://progress-advance.com/tags/css/</link>
    <description>Recent content in CSS on ImageDiagnosis &amp; Program</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Wed, 04 Jan 2023 14:56:00 +0900</lastBuildDate><atom:link href="https://progress-advance.com/tags/css/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>【CSS】input type=&#39;range&#39; のカスタマイズ</title>
      <link>https://progress-advance.com/programming/input-range/</link>
      <pubDate>Wed, 04 Jan 2023 14:56:00 +0900</pubDate>
      
      <guid>https://progress-advance.com/programming/input-range/</guid>
      <description>&lt;p&gt;input rangeを自作しました。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;::-webkit-slider-thumb&lt;/code&gt;は非推奨のようなので、スライダーの&amp;quot;ポチ&amp;quot;も自作。&lt;/p&gt;

&lt;meta name=&#34;viewport&#34; content=&#34;width=device-width&#34;&gt;

&lt;style&gt;

.range_wrapper {
  width:70%;
  position:relative;
  margin:20px;
}
.sub_wrapper {
  display: block;
  width: 100%;
  height:50px;
  padding: 0px;
  text-decoration: none;
  background: ;
  touch-action:pan-x;
}
.range_balloon {
  position: absolute; 
  display: none;
  text-align:center;
  padding: 0 2px; 
  background-color: rgba(82, 82, 82, 0.5);
  color:#fff;
  width:40px;
  left : 47%;
  bottom : 100%;
  margin-bottom : 5px;
  font-size:;
  border-radius:7px;
}
.range_wrapper:hover .range_balloon,
.sub_wrapper:active .range_balloon {
  display:block;
}
.range_thumb {
  position: absolute; 
  display: block;
  text-align:center;
  background-color: #c1ffea;
  width:20px;
  height:20px;
  left : 50%;
  top : 4%;
  border-radius:50%;
  box-shadow: 0px 2px 4px 0px rgba(0, 0, 0, 0.2);
  cursor:pointer;
}

input[type=&#34;range&#34;] {
  -webkit-appearance: none;
  appearance: none;
  cursor: pointer;
  outline: none;
  height: 14px;
  width: 100%;
  border: solid 2px #C6FFFF;
  border-radius:10px;
  content:&#34;&#34;;
  padding:0;
}


input[type=&#34;range&#34;]::-webkit-slider-thumb {
  -webkit-appearance: none; ;
  background: #adffff;
  width: 0px;
  height: 0px;
  border-radius: 50%;
  content:&#34;&#34;;
}
input[type=&#34;range&#34;]::-moz-range-thumb {
  background:#adffff;
  width: 0px;
  height: 0px;
  border-radius: 50%;
  box-shadow: 0px 2px 4px 0px rgba(0, 0, 0, 0.2);
  border: none;
  content:&#34;&#34;;
}
input[type=&#34;range&#34;]::-moz-focus-outer {
  border: 0;
  content:&#34;&#34;;
}
input[type=&#34;range&#34;]:active::-webkit-slider-thumb {
  box-shadow: 0px 5px 10px -2px rgba(0, 0, 0, 0.3);
  content:&#34;&#34;;
}


&lt;/style&gt;
&amp;nbsp;
&lt;div class=&#34;range_wrapper&#34;&gt;
  &lt;span id=&#34;range_balloon&#34; class=&#34;range_balloon&#34;&gt;&lt;/span&gt;
  &lt;div id=&#34;sub_wrapper&#34; class=&#34;sub_wrapper&#34;&gt;
    &lt;span id=&#34;range_thumb&#34; class=&#34;range_thumb&#34;&gt;&lt;/span&gt;
    &lt;input id=&#34;range&#34; type=&#34;range&#34; value=&#34;50&#34; min=&#34;0&#34; max=&#34;100&#34;&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;script&gt;

const range = document.getElementById(&#34;range&#34;),
      text  = document.getElementById(&#34;range_balloon&#34;),
      thumb = document.getElementById(&#34;range_thumb&#34;),
      sub_wrapper = document.getElementById(&#34;sub_wrapper&#34;);
let value;
let mousePosition;
let x = 0;
let rect;
let mouseFlag = false;

const rate = Math.round(range.clientWidth / ( range.clientWidth + thumb.clientWidth) * 100) / 100;

let start = (e) =&gt;{
  e.preventDefault();
  mouseFlag = true;
  rect = range.getBoundingClientRect();
  if (e.touches &amp;&amp; e.touches[0]) {
    x = (e.touches[0].clientX - window.pageXOffset - rect.left) 
  } else if (e.clientX &amp;&amp; e.clientY) {
    x =  (e.clientX - window.pageXOffset - rect.left)  //e.offsetX;
  }
  range.value = Math.round( x / range.clientWidth * 100 );
  range.style.background = `linear-gradient(to right, #ffffe0 0%, #ffffb2 ${range.value}%, #fff ${range.value}%, #fff 100%)`
  thumb.style.left = (range.value - 0.5) * rate + &#34;%&#34;;
  text.innerText  = range.value;
}

let move = (e) =&gt; {  
  e.preventDefault();
  rect = range.getBoundingClientRect();
  if (e.touches &amp;&amp; e.touches[0]) {
    x = (e.touches[0].clientX - window.pageXOffset - rect.left) 
  } else if (e.clientX &amp;&amp; e.clientY) {
    x = (e.clientX - window.pageXOffset - rect.left)   //e.offsetX;
  }
  if ( x &lt; 0 ){
    mousePosition = 0
  } else if ( x &gt; range.clientWidth){
    mousePosition = 100
  } else {
    mousePosition = Math.round(x / range.clientWidth * 100);
  }
  text.style.left = mousePosition + &#34;%&#34;
  text.innerText  = mousePosition;
  
  range.style.background = `linear-gradient(to right, #ffffe0 0%, #ffffb2 ${range.value}%, #ffffb2 ${mousePosition}%, #fff ${mousePosition}%, #fff 100%)`
  if (mouseFlag){
    range.value = mousePosition;
    thumb.style.left = (mousePosition - 0.5) * rate + &#34;%&#34;;
  }
}

let end = (e) =&gt; {
  e.preventDefault();
  mouseFlag = false;
  range.style.background = `linear-gradient(to right, #ffffe0 0%, #ffffb2 ${range.value}%, #fff ${range.value}%, #fff 100%)`
}

let range_input = (e) =&gt; {
  e.preventDefault();
  mouseFlag = false;
  range.style.background = `linear-gradient(to right, #ffffe0 0%, #ffffb2 ${range.value}%, #fff ${range.value}%, #fff 100%)`
  text.style.left  = range.value + &#34;%&#34;;
  text.innerText   = range.value;
  thumb.style.left = (range.value - 0.5) * rate + &#34;%&#34;;
}

sub_wrapper.ontouchstart =
sub_wrapper.onmousedown  = start;

sub_wrapper.onmouseenter = 
sub_wrapper.ontouchmove  =
sub_wrapper.onmousemove  = move; 

sub_wrapper.ontouchend    =
sub_wrapper.ontouchcancel =
sub_wrapper.ontouchend    =
sub_wrapper.ontouchcancel =
sub_wrapper.onmouseleave  = end;

sub_wrapper.onclick   =
sub_wrapper.onmouseup =
range.oninput =
range.onchange = range_input;

range.style.background = `linear-gradient(to right, #ffffe0 0%, #ffffb2 ${range.value}%, #fff ${range.value}%, #fff 100%)`
thumb.style.left = (range.value - 0.5) * rate + &#34;%&#34;;


&lt;/script&gt;</description>
    </item>
    
  </channel>
</rss>
