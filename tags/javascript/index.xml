<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Javascript on ImageDiagnosis &amp; Program</title>
    <link>https://progress-advance.com/tags/javascript/</link>
    <description>Recent content in Javascript on ImageDiagnosis &amp; Program</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Fri, 20 Jan 2023 16:38:52 +0900</lastBuildDate><atom:link href="https://progress-advance.com/tags/javascript/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Inputタグを使わないrange slider</title>
      <link>https://progress-advance.com/programming/range-without-input/</link>
      <pubDate>Fri, 20 Jan 2023 16:38:52 +0900</pubDate>
      
      <guid>https://progress-advance.com/programming/range-without-input/</guid>
      <description>&lt;p&gt;inputタグを使わないレンジスライダーを自作しました。&lt;/p&gt;
&lt;p&gt; 


&lt;style&gt;

.slider_wrapper {
    width:100%;
    height:30px;
    background:rgba(246,246,255,1);
    border-radius:15px;
    position:relative;
    box-shadow:2px 5px 3px gray;
}
.slider_subwrapper {
    width:90%;
    height:30px;
    display:block;
    position:relative;
    margin:0 auto;
    cursor:pointer;
    background:inherit;
    z-index:200;
}
.slider_baloon {
    position: absolute;
    display: none;
    text-align:center;
    padding: 0 2px;
    background-color: rgba(82, 82, 82, 0.5);
    color:#fff;
    left : 5%;
    bottom : 100%;
    margin-bottom : 5px;
    font-size:;
    border-radius:7px;
}
.slider_wrapper:hover .slider_baloon {
    display:block;
}
.slider_thumb {
    position: absolute;
    display: block;
    text-align:center;
    background: rgba(163,163,255,1);
    width:12px;
    height:12px;
    left : 0%;
    top : 10px;
    border-radius:50%;
    box-shadow: 0px 2px 4px 0px rgba(0, 0, 0, 0.2);
    cursor:pointer;
    z-index:100;
}
.slider {
    width:100%;
    height:4px;
    background:#fff;
    cursor:pointer;
    position:absolute;
    top:13px;
    left:0%;
}
.slider_progress {
    height:4px;
    background: rgba(163,163,255,1);
    cursor:pointer;
}

&lt;/style&gt;
&lt;body&gt;


&lt;div id=&#34;slider_wrapper&#34;  class=&#34;slider_wrapper&#34;&gt;
    &lt;div id=&#34;slider_subwrapper&#34; class=&#34;slider_subwrapper&#34;&gt;
        &lt;span id=&#34;slider_baloon&#34; class=&#34;slider_baloon&#34;&gt;&lt;/span&gt;
        &lt;div id=&#34;slider&#34; class=&#34;slider&#34; role=&#34;slider&#34;&gt;
            &lt;div id=&#34;progress_slider&#34;&gt;&lt;/div&gt;
        &lt;/div&gt;
        &lt;span id=&#34;slider_thumb&#34; class=&#34;slider_thumb&#34;&gt;&lt;/span&gt;
    &lt;/div&gt;
&lt;/div&gt;


&lt;/body&gt;

&lt;script&gt;

const progressSlider    = document.getElementById(&#34;progress_slider&#34;),
      slider            = document.getElementById(&#34;slider&#34;),
      sliderSubWrapper  = document.getElementById(&#34;slider_subwrapper&#34;),
      sliderThumb       = document.getElementById(&#34;slider_thumb&#34;),
      text              = document.getElementById(&#34;slider_baloon&#34;);

let WidthX, rect, thumbRate;
let x = 0;
let mousedownFlag = false;
let mouseenter    = false;

sliderSubWrapper.ontouchstart =
sliderSubWrapper.onmousedown  = mousedownSlider;

sliderSubWrapper.ontouchend    =
sliderSubWrapper.onmouseup     =
sliderSubWrapper.onmouseleave  =
sliderSubWrapper.ontouchcancel = mouseupSlider;

sliderSubWrapper.onmouseenter =
sliderSubWrapper.ontouchmove  =
sliderSubWrapper.onmousemove  = moveSlider;


function mouseX(e) {
    rect = sliderSubWrapper.getBoundingClientRect();
    if (e.touches &amp;&amp; e.touches[0]) {
        x = (e.touches[0].clientX - window.pageXOffset - rect.left)
    } else if (e.clientX &amp;&amp; e.clientY) {
        x = (e.clientX - window.pageXOffset - rect.left) //e.offsetXではマウスがthumbの上にあるときにうまく行かない。
    }
    if ( x &lt; 0 ){
        WidthX = 0
    } else if ( x &gt; sliderSubWrapper.clientWidth){
        WidthX = 100
    } else {
        WidthX = Math.round(x / sliderSubWrapper.clientWidth * 100);
    }
    return WidthX;
}
function setProgressSlider (WidthX) {
    progressSlider.style.width =  WidthX + &#39;%&#39;;
    progressSlider.classList.add(&#34;slider_progress&#34;);
    sliderThumb.style.left = WidthX * thumbRate + &#34;%&#34;;
}
function mousedownSlider(e){
    e.preventDefault();
    slider.style.background = `#fff`;

    mousedownFlag = true;
    WidthX = mouseX(e);
    setProgressSlider(WidthX);
    text.style.left = WidthX + &#34;%&#34;;
    text.innerText  = WidthX + &#34;%&#34;;
}
function mouseupSlider(e){
    e.preventDefault();
    mouseenter = false;
    if (mousedownFlag){
        mousedownFlag = false;
        setProgressSlider(WidthX);
    }else{
        slider.style.background = `#fff`;
        mousedownFlag = false;
    }
}
function moveSlider(e){
    e.preventDefault();
    WidthX = mouseX(e);
    if(mousedownFlag){
        setProgressSlider(WidthX);
        text.style.left = WidthX + &#34;%&#34;;
        text.innerText  = WidthX + &#34;%&#34;;
    } else {
        mouseenter = true;
        text.style.left = WidthX + &#34;%&#34;;
        text.innerText  = WidthX + &#34;%&#34;;
        slider.style.background = `linear-gradient(to right, rgba(163,163,255,0.4) 0%, rgba(163,163,255,0.4) ${WidthX}%, #fff ${WidthX}%, #fff 100%)`
    }
}

thumbRate = sliderSubWrapper.clientWidth / ( sliderSubWrapper.clientWidth + sliderThumb.clientWidth);


&lt;/script&gt;


&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【Javascript】オーディオタグのカスタマイズ</title>
      <link>https://progress-advance.com/programming/audio-customization/</link>
      <pubDate>Sun, 18 Dec 2022 14:38:30 +0900</pubDate>
      
      <guid>https://progress-advance.com/programming/audio-customization/</guid>
      <description>&lt;p&gt;オーディオタグを Javascript で自作してみました。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【Javascript】横スライダー(forloop内で使用可)</title>
      <link>https://progress-advance.com/programming/slider/</link>
      <pubDate>Sun, 27 Nov 2022 18:45:39 +0900</pubDate>
      
      <guid>https://progress-advance.com/programming/slider/</guid>
      <description>&lt;p&gt;forloop内での横スライダー(自作)。&lt;/p&gt;
&lt;p&gt;環境：python&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【Javascript】ラジオボタン・チェックボックスのチェックの判定や、要素のid属性取得・変更、前後の要素の取得など</title>
      <link>https://progress-advance.com/programming/javascript-elem/</link>
      <pubDate>Sat, 26 Nov 2022 18:53:51 +0900</pubDate>
      
      <guid>https://progress-advance.com/programming/javascript-elem/</guid>
      <description>&lt;p&gt;Javascriptでのラジオボタンやチェックボックスのチェックの判定や、要素のid属性の取得・変更、ある要素の前後の要素を取得する方法などのまとめです。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【Javascript】class操作のまとめ</title>
      <link>https://progress-advance.com/programming/javascript-css/</link>
      <pubDate>Fri, 25 Nov 2022 08:23:37 +0900</pubDate>
      
      <guid>https://progress-advance.com/programming/javascript-css/</guid>
      <description>&lt;p&gt;Javascriptでclassの追加や削除、置換などを行う方法のメモです。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>JavaScriptで要素のIDを取得</title>
      <link>https://progress-advance.com/programming/js-onclick-getid/</link>
      <pubDate>Fri, 07 Oct 2022 15:29:19 +0900</pubDate>
      
      <guid>https://progress-advance.com/programming/js-onclick-getid/</guid>
      <description>&lt;p&gt;ボタンや要素をクリックしたとき、動画、オーディオの終了時、あるいは &lt;code&gt;querySelectorall()&lt;/code&gt; を用いて要素の ID を取得する方法のメモ。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【JavaScript】演算や要素の有無の確認の備忘録</title>
      <link>https://progress-advance.com/programming/javascript-memo/</link>
      <pubDate>Fri, 19 Aug 2022 19:43:47 +0900</pubDate>
      
      <guid>https://progress-advance.com/programming/javascript-memo/</guid>
      <description>&lt;p&gt;タイトルの通り、JavaScript での演算の方法や、要素の有無の確認の備忘録です。&lt;/p&gt;
&lt;p&gt;JavaScript で数値の足し算をするとき、文字列が含まれていると上手くいきません。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Page Visibility API でページ離脱時にイベントを発生させる</title>
      <link>https://progress-advance.com/programming/js-visibilitychange-useragent/</link>
      <pubDate>Fri, 12 Aug 2022 05:57:54 +0900</pubDate>
      
      <guid>https://progress-advance.com/programming/js-visibilitychange-useragent/</guid>
      <description>&lt;p&gt;先日、&lt;a href=&#34;https://progress-advance.com/programming/javascript-intersection-observer-api/&#34;&gt;Intersection-Observer-Api に関する記事&lt;/a&gt;にて、ページ遷移時にイベントを発生させるために&lt;code&gt;beforeunload&lt;/code&gt;を使用しましたが、ブラウザ間で挙動が異なっていたり、&lt;code&gt;event.returnValue&lt;/code&gt;を記載しないと期待した通りに動かなかったりしました。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【JavaScript】Intersection-Observer-Apiを使い、特定の要素が画面に入ったら「id」を取得</title>
      <link>https://progress-advance.com/programming/javascript-intersection-observer-api/</link>
      <pubDate>Mon, 08 Aug 2022 10:30:51 +0900</pubDate>
      
      <guid>https://progress-advance.com/programming/javascript-intersection-observer-api/</guid>
      <description>&lt;p&gt;特定の要素が画面に表示されたら、その要素の id を取得し、POST で views.py に値を渡す方法について。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【JavaScript】ページ移動・更新の検知方法</title>
      <link>https://progress-advance.com/programming/js-reload/</link>
      <pubDate>Mon, 08 Aug 2022 09:38:24 +0900</pubDate>
      
      <guid>https://progress-advance.com/programming/js-reload/</guid>
      <description>&lt;p&gt;javascript でのページ移動、更新を検知する方法のメモ。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ウェブカメラで撮影した動画を、直接サーバーに送る。</title>
      <link>https://progress-advance.com/programming/webcamvideotoserver/</link>
      <pubDate>Wed, 29 Jun 2022 09:36:13 +0900</pubDate>
      
      <guid>https://progress-advance.com/programming/webcamvideotoserver/</guid>
      <description>&lt;p&gt;ウェブカメラで撮影した動画を直接サーバーに送る方法を調べてみました。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>QRコードの作り方 -Python, JavaScript(jQuery)-</title>
      <link>https://progress-advance.com/programming/qrcode/</link>
      <pubDate>Wed, 08 Jun 2022 09:47:46 +0900</pubDate>
      
      <guid>https://progress-advance.com/programming/qrcode/</guid>
      <description>&lt;p&gt;Python 又は JavaScript で QR コードを作り、html に表示する方法です。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
